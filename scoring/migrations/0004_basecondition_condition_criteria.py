# Generated by Django 3.1 on 2022-05-02 03:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('scoring', '0003_auto_20220413_1939'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_scoring.basecondition_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Criteria',
            fields=[
                ('basecondition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scoring.basecondition')),
                ('operand', models.CharField(choices=[('And', 'And'), ('Or', 'Or')], max_length=25)),
                ('conditions', models.ManyToManyField(related_name='criterias', to='scoring.BaseCondition')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('scoring.basecondition',),
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('basecondition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scoring.basecondition')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.IntegerField(default=0)),
                ('score_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='scoring.scoretype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('scoring.basecondition',),
        ),
    ]
